Insert overwrite table shipment_fl_l0_90_fact
select shipmentid, 
A.first_undelivery_status.col2, 
A.last_undelivery_status.col2,
A.reverse_pickup_hub_id, 
A.shipment_last_received_hub_id , 
A.lpd_cpd_struct.col1 as shipment_first_received_hub_id, 
A.first_mh_fsd_struct.col1 as shipment_first_received_mh_id, 
A.shipment_last_received_mh_id , 
A.shipment_first_received_dh_id, 
A.shipment_last_received_dh_id, 
A.lpd_cpd_struct.col2 as logistics_promise_datetime, 
A.lpd_cpd_struct.col3 as customer_promise_datetime, 
A.shipment_origin_facility_id , 
A.shipment_first_received_pc_id , 
A.shipment_last_received_pc_id , 
A.rto_received_hub_id, 
A.first_mh_fsd_struct.col2 as fsd_assigned_hub_id,
A.profiler_flag,
A.rto_first_undelivery_status.col2 as rto_first_undelivery_status,
cast(A.first_undelivery_status.col1 as TIMESTAMP) as first_undelivery_status_datetime,
cast(A.last_undelivery_status.col1 as TIMESTAMP) as last_undelivery_status_datetime,
cast(A.rto_first_undelivery_status.col1 as TIMESTAMP) as rto_first_undelivery_status_datetime
from ( select entityid as shipmentid,
min ( if ( `data`.current_address.type IN ('DELIVERY_HUB','PICKUP_CENTER') and 
lower(`data`.status) IN 
('undelivered_customer_not_available',
'undelivered_door_lock',
'undelivered_holiday',
'undelivered_cod_not_ready',
'undelivered_misroute',
'undelivered_shipment_damage',
'undelivered_order_rejected_by_customer',
'undelivered_no_response',
'undelivered_incomplete_address',
'undelivered_invalid_time_frame',
'undelivered_heavy_traffic',
'undelivered_vehicle_breakdown',
'undelivered_security_instability',
'undelivered_shipment_on_hold',
'undelivered_address_not_found',
'undelivered_heavy_rain',
'undelivered_order_rejected_opendelivery',
'undelivered_for_consolidation',
'undelivered_heavyload',
'undelivered_request_for_reschedule',
'undelivered_outofdeliveryarea',
'undelivered_nonserviceablepincode',
'undelivered_samecitymisroute',
'undelivered_othercitymisroute',
'undelivered_untraceablefromhub',
'undelivered_pickup_cancelled',
'undelivered_pickup_time_elapsed',
'undelivered_pickup_others') , struct(`shipment`.updatedat, struct(`shipment`.updatedat, `shipment`.`data`.status )), null )).col2 as first_undelivery_status , 
max ( if ( lower(`data`.shipment_type) in ('forward') and `data`.current_address.type IN ('DELIVERY_HUB','PICKUP_CENTER') and 
lower(`data`.status) IN 
('undelivered_customer_not_available',
'undelivered_door_lock',
'undelivered_holiday',
'undelivered_cod_not_ready',
'undelivered_misroute',
'undelivered_shipment_damage',
'undelivered_order_rejected_by_customer',
'undelivered_no_response',
'undelivered_incomplete_address',
'undelivered_invalid_time_frame',
'undelivered_heavy_traffic',
'undelivered_vehicle_breakdown',
'undelivered_security_instability',
'undelivered_shipment_on_hold',
'undelivered_address_not_found',
'undelivered_heavy_rain',
'undelivered_order_rejected_opendelivery',
'undelivered_for_consolidation',
'undelivered_heavyload',
'undelivered_request_for_reschedule',
'undelivered_outofdeliveryarea',
'undelivered_nonserviceablepincode',
'undelivered_samecitymisroute',
'undelivered_othercitymisroute',
'undelivered_untraceablefromhub',
'undelivered_pickup_cancelled',
'undelivered_pickup_time_elapsed',
'undelivered_pickup_others') , struct(`shipment`.updatedat, struct(`shipment`.updatedat, `shipment`.`data`.status ) ), null )).col2 as rto_first_undelivery_status,
max( If ( lower(`data`.status) IN 
('undelivered_customer_not_available',
'undelivered_door_lock',
'undelivered_holiday',
'undelivered_cod_not_ready',
'undelivered_misroute',
'undelivered_shipment_damage',
'undelivered_order_rejected_by_customer',
'undelivered_no_response',
'undelivered_incomplete_address',
'undelivered_invalid_time_frame',
'undelivered_heavy_traffic',
'undelivered_vehicle_breakdown',
'undelivered_security_instability',
'undelivered_shipment_on_hold',
'undelivered_address_not_found',
'undelivered_heavy_rain',
'undelivered_order_rejected_opendelivery',
'undelivered_for_consolidation',
'undelivered_heavyload',
'undelivered_request_for_reschedule',
'undelivered_outofdeliveryarea',
'undelivered_nonserviceablepincode',
'undelivered_samecitymisroute',
'undelivered_othercitymisroute',
'undelivered_untraceablefromhub',
'undelivered_pickup_cancelled',
'undelivered_pickup_time_elapsed',
'undelivered_pickup_others') , struct( `shipment`.updatedat, struct(`shipment`.updatedat, `shipment`.`data`.status)), null ) ).col2 as last_undelivery_status, 
min( if (`data`.status IN ('Expected') and `data`.current_address.type = 'DELIVERY_HUB' , struct( `shipment`.updatedat, `shipment`.`data`.current_address.id), null) ).col2 as reverse_pickup_hub_id,
max( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') , struct(`shipment`.updatedat, `shipment`.`data`.current_address.id), null)).col2 as shipment_last_received_hub_id,
min( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') , struct( `shipment`.updatedat, struct( `shipment`.`data`.current_address.id, `shipment`.`data`.design_sla,`shipment`.`data`.customer_sla)),null)).col2 as lpd_cpd_struct,
min ( if (`data`.status IN ('InScan_Success','Received','Error','Undelivered_Not_Attended','PICKUP_AddedToPickupSheet') , struct ( `shipment`.updatedat, struct(`shipment`.`data`.current_address.id , `shipment`.`data`.assigned_address.id) ), null )).col2 as first_mh_fsd_struct , 
max( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') and `data`.current_address.type = 'MOTHER_HUB' , struct ( `shipment`.updatedat,`data`.current_address.id ), null)).col2 as shipment_last_received_mh_id, 
min ( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') and `data`.current_address.type = 'DELIVERY_HUB'  , struct(`shipment`.updatedat, `shipment`.`data`.current_address.id), null)).col2 as shipment_first_received_dh_id,
max(if (lower(`data`.status) IN ('received','error','undelivered_not_attended') and `data`.current_address.type = 'DELIVERY_HUB', struct(`shipment`.updatedat, `shipment`.`data`.current_address.id) , null )).col2  as shipment_last_received_dh_id, 
max( if( lower(`data`.status) IN ('expected')  and `data`.current_address.type = 'FKL_FACILITY' , struct( `shipment`.updatedat , `shipment`.`data`.current_address.id),null )) .col2 as shipment_origin_facility_id,
min( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') and `data`.current_address.type = 'PICKUP_CENTER' , struct(`shipment`.updatedat, `shipment`.`data`.current_address.id) , null ) ).col2 as shipment_first_received_pc_id, 
max( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') and `data`.current_address.type = 'PICKUP_CENTER' , struct(`shipment`.updatedat, `shipment`.`data`.current_address.id) , null )).col2 as shipment_last_received_pc_id,
min(if ( lower(`data`.status) IN ('received') and `data`.shipment_type IN ('approved_rto','unapproved_rto')  ,struct(`shipment`.updatedat, `shipment`.`data`.current_address.id) , null  ) ).col2 as rto_received_hub_id,
min(if (`shipment`.`data`.shipment_weight.updated_by in ('gor','pb'),struct(`shipment`.updatedat, `shipment`.`data`.shipment_weight.updated_by ),null)).col2 as profiler_flag
from bigfoot_journal.dart_wsr_scp_ekl_shipment_4 shipment where day  > #120#DAY#
group by entityid ) A ;
Insert overwrite table shipment_fl_l0_90_fact
select shipmentid, 
A.first_undelivery_status.col2, 
A.last_undelivery_status.col2,
A.reverse_pickup_hub_id, 
A.shipment_last_received_hub_id , 
A.lpd_cpd_struct.col1 as shipment_first_received_hub_id, 
A.first_mh_struct.col1 as shipment_first_received_mh_id, 
A.shipment_last_received_mh_id , 
A.shipment_first_received_dh_id, 
A.shipment_last_received_dh_id, 
A.lpd_cpd_struct.col2 as logistics_promise_datetime, 
A.lpd_cpd_struct.col3 as customer_promise_datetime, 
A.shipment_origin_facility_id , 
A.shipment_first_received_pc_id , 
A.shipment_last_received_pc_id , 
A.rto_received_hub_id, 
A.first_assigned_fsd_struct.col2 as fsd_assigned_hub_id,
A.profiler_flag,
A.rto_first_undelivery_status.col2 as rto_first_undelivery_status,
cast(A.first_undelivery_status.col1 as TIMESTAMP) as first_undelivery_status_datetime,
cast(A.last_undelivery_status.col1 as TIMESTAMP) as last_undelivery_status_datetime,
cast(A.rto_first_undelivery_status.col1 as TIMESTAMP) as rto_first_undelivery_status_datetime
from ( select entityid as shipmentid,
min ( if ( `data`.current_address.type IN ('DELIVERY_HUB','PICKUP_CENTER') and 
lower(`data`.status) IN 
('undelivered_customer_not_available',
'undelivered_door_lock',
'undelivered_holiday',
'undelivered_cod_not_ready',
'undelivered_misroute',
'undelivered_shipment_damage',
'undelivered_order_rejected_by_customer',
'undelivered_no_response',
'undelivered_incomplete_address',
'undelivered_invalid_time_frame',
'undelivered_heavy_traffic',
'undelivered_vehicle_breakdown',
'undelivered_security_instability',
'undelivered_shipment_on_hold',
'undelivered_address_not_found',
'undelivered_heavy_rain',
'undelivered_order_rejected_opendelivery',
'undelivered_for_consolidation',
'undelivered_heavyload',
'undelivered_request_for_reschedule',
'undelivered_outofdeliveryarea',
'undelivered_nonserviceablepincode',
'undelivered_samecitymisroute',
'undelivered_othercitymisroute',
'undelivered_untraceablefromhub',
'undelivered_pickup_cancelled',
'undelivered_pickup_time_elapsed',
'undelivered_pickup_others') , struct(`shipment`.updatedat, struct(`shipment`.updatedat, `shipment`.`data`.status )), null )).col2 as first_undelivery_status , 
max ( if ( lower(`data`.shipment_type) in ('forward') and `data`.current_address.type IN ('DELIVERY_HUB','PICKUP_CENTER') and 
lower(`data`.status) IN 
('undelivered_customer_not_available',
'undelivered_door_lock',
'undelivered_holiday',
'undelivered_cod_not_ready',
'undelivered_misroute',
'undelivered_shipment_damage',
'undelivered_order_rejected_by_customer',
'undelivered_no_response',
'undelivered_incomplete_address',
'undelivered_invalid_time_frame',
'undelivered_heavy_traffic',
'undelivered_vehicle_breakdown',
'undelivered_security_instability',
'undelivered_shipment_on_hold',
'undelivered_address_not_found',
'undelivered_heavy_rain',
'undelivered_order_rejected_opendelivery',
'undelivered_for_consolidation',
'undelivered_heavyload',
'undelivered_request_for_reschedule',
'undelivered_outofdeliveryarea',
'undelivered_nonserviceablepincode',
'undelivered_samecitymisroute',
'undelivered_othercitymisroute',
'undelivered_untraceablefromhub',
'undelivered_pickup_cancelled',
'undelivered_pickup_time_elapsed',
'undelivered_pickup_others') , struct(`shipment`.updatedat, struct(`shipment`.updatedat, `shipment`.`data`.status ) ), null )).col2 as rto_first_undelivery_status,
max( If ( lower(`data`.status) IN 
('undelivered_customer_not_available',
'undelivered_door_lock',
'undelivered_holiday',
'undelivered_cod_not_ready',
'undelivered_misroute',
'undelivered_shipment_damage',
'undelivered_order_rejected_by_customer',
'undelivered_no_response',
'undelivered_incomplete_address',
'undelivered_invalid_time_frame',
'undelivered_heavy_traffic',
'undelivered_vehicle_breakdown',
'undelivered_security_instability',
'undelivered_shipment_on_hold',
'undelivered_address_not_found',
'undelivered_heavy_rain',
'undelivered_order_rejected_opendelivery',
'undelivered_for_consolidation',
'undelivered_heavyload',
'undelivered_request_for_reschedule',
'undelivered_outofdeliveryarea',
'undelivered_nonserviceablepincode',
'undelivered_samecitymisroute',
'undelivered_othercitymisroute',
'undelivered_untraceablefromhub',
'undelivered_pickup_cancelled',
'undelivered_pickup_time_elapsed',
'undelivered_pickup_others') , struct( `shipment`.updatedat, struct(`shipment`.updatedat, `shipment`.`data`.status)), null ) ).col2 as last_undelivery_status, 
min( if (`data`.status IN ('Expected') and `data`.current_address.type = 'DELIVERY_HUB' , struct( `shipment`.updatedat, `shipment`.`data`.current_address.id), null) ).col2 as reverse_pickup_hub_id,
max( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') , struct(`shipment`.updatedat, `shipment`.`data`.current_address.id), null)).col2 as shipment_last_received_hub_id,
min( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') , struct( `shipment`.updatedat, struct( `shipment`.`data`.current_address.id, `shipment`.`data`.design_sla,`shipment`.`data`.customer_sla)),null)).col2 as lpd_cpd_struct,
min ( if (`data`.status IN ('InScan_Success','Received','Error','Undelivered_Not_Attended') , struct ( `shipment`.updatedat, struct(`shipment`.`data`.current_address.id , `shipment`.`data`.assigned_address.id) ), null )).col2 as first_mh_struct ,
min ( if (`data`.status IN ('PICKUP_AddedToPickupSheet') , struct ( `shipment`.updatedat, struct(`shipment`.`data`.current_address.id , `shipment`.`data`.assigned_address.id) ), null )).col2 as first_assigned_fsd_struct , 
max( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') and `data`.current_address.type = 'MOTHER_HUB' , struct ( `shipment`.updatedat,`data`.current_address.id ), null)).col2 as shipment_last_received_mh_id, 
min ( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') and `data`.current_address.type = 'DELIVERY_HUB'  , struct(`shipment`.updatedat, `shipment`.`data`.current_address.id), null)).col2 as shipment_first_received_dh_id,
max(if (lower(`data`.status) IN ('received','error','undelivered_not_attended') and `data`.current_address.type = 'DELIVERY_HUB', struct(`shipment`.updatedat, `shipment`.`data`.current_address.id) , null )).col2  as shipment_last_received_dh_id, 
max( if( lower(`data`.status) IN ('expected')  and `data`.current_address.type = 'FKL_FACILITY' , struct( `shipment`.updatedat , `shipment`.`data`.current_address.id),null )) .col2 as shipment_origin_facility_id,
min( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') and `data`.current_address.type = 'PICKUP_CENTER' , struct(`shipment`.updatedat, `shipment`.`data`.current_address.id) , null ) ).col2 as shipment_first_received_pc_id, 
max( if ( lower(`data`.status) IN ('received','error','undelivered_not_attended') and `data`.current_address.type = 'PICKUP_CENTER' , struct(`shipment`.updatedat, `shipment`.`data`.current_address.id) , null )).col2 as shipment_last_received_pc_id,
min(if ( lower(`data`.status) IN ('received') and `data`.shipment_type IN ('approved_rto','unapproved_rto')  ,struct(`shipment`.updatedat, `shipment`.`data`.current_address.id) , null  ) ).col2 as rto_received_hub_id,
min(if (`shipment`.`data`.shipment_weight.updated_by in ('gor','pb'),struct(`shipment`.updatedat, `shipment`.`data`.shipment_weight.updated_by ),null)).col2 as profiler_flag
from bigfoot_journal.dart_wsr_scp_ekl_shipment_4 shipment where day  > #120#DAY#
group by entityid ) A ;
